<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.dao.MessageDao">

    <resultMap type="com.example.demo.dao.mapper.entity.Message" id="MessageMap">
        <result property="pkid" column="pkid" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="toUserId" column="to_user_id" jdbcType="VARCHAR"/>
        <result property="messageType" column="message_type" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MessageMap">
        select
          pkid, user_id, to_user_id, message_type, content
        from vue_private.message
        where pkid = #{pkid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessageMap">
        select
          pkid, user_id, to_user_id, message_type, content
        from vue_private.message
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MessageMap">
        select
        pkid, user_id, to_user_id, message_type, content
        from vue_private.message
        <where>
            <if test="pkid != null and pkid != ''">
                and pkid = #{pkid}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="toUserId != null and toUserId != ''">
                and to_user_id = #{toUserId}
            </if>
            <if test="messageType != null and messageType != ''">
                and message_type = #{messageType}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="pkid" useGeneratedKeys="true">
        insert into vue_private.message(user_id, to_user_id, message_type, content)
        values (#{userId}, #{toUserId}, #{messageType}, #{content})
    </insert>

    <insert id="insertBatch" keyProperty="pkid" useGeneratedKeys="true">
        insert into vue_private.message(user_id, to_user_id, message_type, content)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.toUserId}, #{entity.messageType}, #{entity.content})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="pkid" useGeneratedKeys="true">
        insert into vue_private.message(user_id, to_user_id, message_type, content)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.toUserId}, #{entity.messageType}, #{entity.content})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , to_user_id = values(to_user_id) , message_type = values(message_type) , content =
        values(content)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update vue_private.message
        <set>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="toUserId != null and toUserId != ''">
                to_user_id = #{toUserId},
            </if>
            <if test="messageType != null and messageType != ''">
                message_type = #{messageType},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
        </set>
        where pkid = #{pkid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from vue_private.message where pkid = #{pkid}
    </delete>

</mapper>

